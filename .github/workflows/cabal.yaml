# NOTE: This should be a good reference for github actions w.r.t haskell
# https://markkarpov.com/post/github-actions-for-haskell-ci.html

name: graded-monads::CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    
#   NOTE: once the library is ready to be released into the wild
#   we could use this code block to run the tests and build the exe.
#   on multiple GHC versions and perhaps even multiple cabal versions
    strategy:
      matrix:
        cabal: ["3.4"]
        ghc: ["9.0.2", "9.2.6", "9.4.5"]

    env:
      CONFIG: "--project-file=ci/${{ matrix.ghc }}.project"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: haskell/actions/setup@v1.2
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Freeze
        run: |
          cabal update
          cabal configure --enable-tests --test-show-details=direct
          cabal freeze

      - name: Cache
        uses: actions/cache@v3
        env:
          cache-name: cache-cabal
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: "Build"
        run: cabal build $CONFIG

      - name: Test
        run: cabal test all $CONFIG

      - name: Haddock
        run: cabal haddock all $CONFIG

      - name: SDist
        run: cabal sdist all $CONFIG

# NOTE: keeping these here for future versions
#      - name: "Test"
#        run: cabal test $CONFIG
#
#      - run: cabal haddock $CONFIG
#      - run: cabal sdist
